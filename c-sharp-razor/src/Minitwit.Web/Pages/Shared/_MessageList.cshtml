@using Minitwit.Core.Entities
@using Minitwit.Core.Repository
@using Minitwit.Web.Models
@inject SignInManager<Author> SigninManager
@inject UserManager<Author> UserManager
@inject IFollowRepository FollowRepository
@inject IAuthorRepository AuthorRepository
@model dynamic

<ul id="messagelist" class="Messages">
    
    @foreach (MessageViewModel Message in Model.Messages)
    {
        <li>
            <div class="Message-view">
                <div class="Message-info">
                    <strong>
                        
                        <a href="/@Message.User.Username">@Message.User.Username</a>
                        <p>Followers: @AuthorRepository.GetFollowersByIdAsync(Message.User.Id).Result.Count()</p>
                    </strong>
                    <p class="Message-message">
                        @Message.Message
                    </p>

                    <small>&mdash; @Message.Timestamp</small>
                </div>

                @if (SigninManager.IsSignedIn(User) && Message.User.Username != User.Identity?.Name)
                {
                    if (!await FollowRepository.IsFollowingAsync(Model.user.Id, Message.User.Id))
                    {
                        <form asp-page="public" asp-page-handler="Follow" method="post" asp-route-CurrentPage="@Model.currentPage" asp-route-Author2Follow="@Message.User.Id">
                            <input type="submit" value="Follow"/>
                        </form>
                    }
                    else
                    {
                        <form asp-page="public" asp-page-handler="Unfollow" method="post" asp-route-CurrentPage="@Model.currentPage" asp-route-Author2Unfollow="@Message.User.Id">
                            <input type="submit" value="Unfollow"/>
                        </form>
                    }
                }
            </div>
        </li>
    }
</ul>

<div style="display:flex;justify-content:center">

    @{

        var currentUrl = Context.Request.Path;

        var newUrl1 = $"{currentUrl}?page=1";
        var newUrl2 = $"{currentUrl}?page={@Model.currentPage-1}";
        var newUrl3 = $"{currentUrl}?page={@Model.currentPage}";
        var newUrl4 = $"{currentUrl}?page={@Model.currentPage+1}";
        var newUrl5 = $"{currentUrl}?page={@Model.totalPages}";

        //string name1 = "[1]";
        string name1 = $"[<<]";
        string name2 = $"[{@Model.currentPage - 1}]";
        string name3 = $"[{@Model.currentPage}]";
        string name4 = $"[{@Model.currentPage + 1}]";
        //string name5 = $"[{@Model.totalPages}]";
        string name5 = $"[>>]";

        
        if (@Model.currentPage > 1) {<a href="@newUrl1">@name1</a>}
        if (@Model.currentPage != 1) {<a href="@newUrl2">@name2</a>}

        <a href="@newUrl3" style="margin-inline:10px">@name3</a>

        if (@Model.currentPage != @Model.totalPages) {<a href="@newUrl4">@name4</a>}
        if (@Model.currentPage < @Model.totalPages) {<a href="@newUrl5">@name5</a>}


    }



</div>
